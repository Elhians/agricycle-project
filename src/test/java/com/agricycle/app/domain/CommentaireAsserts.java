package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommentaireAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentaireAllPropertiesEquals(Commentaire expected, Commentaire actual) {
        assertCommentaireAutoGeneratedPropertiesEquals(expected, actual);
        assertCommentaireAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentaireAllUpdatablePropertiesEquals(Commentaire expected, Commentaire actual) {
        assertCommentaireUpdatableFieldsEquals(expected, actual);
        assertCommentaireUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentaireAutoGeneratedPropertiesEquals(Commentaire expected, Commentaire actual) {
        assertThat(actual)
            .as("Verify Commentaire auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentaireUpdatableFieldsEquals(Commentaire expected, Commentaire actual) {
        assertThat(actual)
            .as("Verify Commentaire relevant properties")
            .satisfies(a -> assertThat(a.getContenu()).as("check contenu").isEqualTo(expected.getContenu()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommentaireUpdatableRelationshipsEquals(Commentaire expected, Commentaire actual) {
        assertThat(actual)
            .as("Verify Commentaire relationships")
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()))
            .satisfies(a -> assertThat(a.getAuteur()).as("check auteur").isEqualTo(expected.getAuteur()));
    }
}
