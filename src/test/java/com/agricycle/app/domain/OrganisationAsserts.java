package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrganisationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganisationAllPropertiesEquals(Organisation expected, Organisation actual) {
        assertOrganisationAutoGeneratedPropertiesEquals(expected, actual);
        assertOrganisationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganisationAllUpdatablePropertiesEquals(Organisation expected, Organisation actual) {
        assertOrganisationUpdatableFieldsEquals(expected, actual);
        assertOrganisationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganisationAutoGeneratedPropertiesEquals(Organisation expected, Organisation actual) {
        assertThat(actual)
            .as("Verify Organisation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganisationUpdatableFieldsEquals(Organisation expected, Organisation actual) {
        assertThat(actual)
            .as("Verify Organisation relevant properties")
            .satisfies(a -> assertThat(a.getNomOrganisation()).as("check nomOrganisation").isEqualTo(expected.getNomOrganisation()))
            .satisfies(a -> assertThat(a.getSiteWeb()).as("check siteWeb").isEqualTo(expected.getSiteWeb()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrganisationUpdatableRelationshipsEquals(Organisation expected, Organisation actual) {
        assertThat(actual)
            .as("Verify Organisation relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
