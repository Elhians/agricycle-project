package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProduitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProduitAllPropertiesEquals(Produit expected, Produit actual) {
        assertProduitAutoGeneratedPropertiesEquals(expected, actual);
        assertProduitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProduitAllUpdatablePropertiesEquals(Produit expected, Produit actual) {
        assertProduitUpdatableFieldsEquals(expected, actual);
        assertProduitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProduitAutoGeneratedPropertiesEquals(Produit expected, Produit actual) {
        assertThat(actual)
            .as("Verify Produit auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProduitUpdatableFieldsEquals(Produit expected, Produit actual) {
        assertThat(actual)
            .as("Verify Produit relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getPrix()).as("check prix").isEqualTo(expected.getPrix()))
            .satisfies(a -> assertThat(a.getQuantite()).as("check quantite").isEqualTo(expected.getQuantite()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getStatut()).as("check statut").isEqualTo(expected.getStatut()))
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getDateAjout()).as("check dateAjout").isEqualTo(expected.getDateAjout()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProduitUpdatableRelationshipsEquals(Produit expected, Produit actual) {
        assertThat(actual)
            .as("Verify Produit relationships")
            .satisfies(a -> assertThat(a.getVendeur()).as("check vendeur").isEqualTo(expected.getVendeur()))
            .satisfies(a -> assertThat(a.getAcheteur()).as("check acheteur").isEqualTo(expected.getAcheteur()));
    }
}
