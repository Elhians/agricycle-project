package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConsommateurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConsommateurAllPropertiesEquals(Consommateur expected, Consommateur actual) {
        assertConsommateurAutoGeneratedPropertiesEquals(expected, actual);
        assertConsommateurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConsommateurAllUpdatablePropertiesEquals(Consommateur expected, Consommateur actual) {
        assertConsommateurUpdatableFieldsEquals(expected, actual);
        assertConsommateurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConsommateurAutoGeneratedPropertiesEquals(Consommateur expected, Consommateur actual) {
        assertThat(actual)
            .as("Verify Consommateur auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConsommateurUpdatableFieldsEquals(Consommateur expected, Consommateur actual) {
        assertThat(actual)
            .as("Verify Consommateur relevant properties")
            .satisfies(a -> assertThat(a.getPreferences()).as("check preferences").isEqualTo(expected.getPreferences()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConsommateurUpdatableRelationshipsEquals(Consommateur expected, Consommateur actual) {
        assertThat(actual)
            .as("Verify Consommateur relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
