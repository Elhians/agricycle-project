package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaiementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAllPropertiesEquals(Paiement expected, Paiement actual) {
        assertPaiementAutoGeneratedPropertiesEquals(expected, actual);
        assertPaiementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAllUpdatablePropertiesEquals(Paiement expected, Paiement actual) {
        assertPaiementUpdatableFieldsEquals(expected, actual);
        assertPaiementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementAutoGeneratedPropertiesEquals(Paiement expected, Paiement actual) {
        assertThat(actual)
            .as("Verify Paiement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementUpdatableFieldsEquals(Paiement expected, Paiement actual) {
        assertThat(actual)
            .as("Verify Paiement relevant properties")
            .satisfies(a -> assertThat(a.getMoyenPaiement()).as("check moyenPaiement").isEqualTo(expected.getMoyenPaiement()))
            .satisfies(a -> assertThat(a.getPreuve()).as("check preuve").isEqualTo(expected.getPreuve()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaiementUpdatableRelationshipsEquals(Paiement expected, Paiement actual) {
        assertThat(actual)
            .as("Verify Paiement relationships")
            .satisfies(a -> assertThat(a.getTransaction()).as("check transaction").isEqualTo(expected.getTransaction()))
            .satisfies(a -> assertThat(a.getAcheteur()).as("check acheteur").isEqualTo(expected.getAcheteur()));
    }
}
