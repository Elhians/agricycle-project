package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntrepriseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAllPropertiesEquals(Entreprise expected, Entreprise actual) {
        assertEntrepriseAutoGeneratedPropertiesEquals(expected, actual);
        assertEntrepriseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAllUpdatablePropertiesEquals(Entreprise expected, Entreprise actual) {
        assertEntrepriseUpdatableFieldsEquals(expected, actual);
        assertEntrepriseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseAutoGeneratedPropertiesEquals(Entreprise expected, Entreprise actual) {
        assertThat(actual)
            .as("Verify Entreprise auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseUpdatableFieldsEquals(Entreprise expected, Entreprise actual) {
        assertThat(actual)
            .as("Verify Entreprise relevant properties")
            .satisfies(a -> assertThat(a.getNomEntreprise()).as("check nomEntreprise").isEqualTo(expected.getNomEntreprise()))
            .satisfies(a -> assertThat(a.getTypeActivite()).as("check typeActivite").isEqualTo(expected.getTypeActivite()))
            .satisfies(a -> assertThat(a.getLicence()).as("check licence").isEqualTo(expected.getLicence()))
            .satisfies(a -> assertThat(a.getAdressePhysique()).as("check adressePhysique").isEqualTo(expected.getAdressePhysique()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntrepriseUpdatableRelationshipsEquals(Entreprise expected, Entreprise actual) {
        assertThat(actual)
            .as("Verify Entreprise relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
