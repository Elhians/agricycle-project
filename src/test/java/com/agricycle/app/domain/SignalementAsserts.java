package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SignalementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalementAllPropertiesEquals(Signalement expected, Signalement actual) {
        assertSignalementAutoGeneratedPropertiesEquals(expected, actual);
        assertSignalementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalementAllUpdatablePropertiesEquals(Signalement expected, Signalement actual) {
        assertSignalementUpdatableFieldsEquals(expected, actual);
        assertSignalementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalementAutoGeneratedPropertiesEquals(Signalement expected, Signalement actual) {
        assertThat(actual)
            .as("Verify Signalement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalementUpdatableFieldsEquals(Signalement expected, Signalement actual) {
        assertThat(actual)
            .as("Verify Signalement relevant properties")
            .satisfies(a -> assertThat(a.getRaison()).as("check raison").isEqualTo(expected.getRaison()))
            .satisfies(a -> assertThat(a.getCible()).as("check cible").isEqualTo(expected.getCible()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalementUpdatableRelationshipsEquals(Signalement expected, Signalement actual) {
        assertThat(actual)
            .as("Verify Signalement relationships")
            .satisfies(a -> assertThat(a.getAuteur()).as("check auteur").isEqualTo(expected.getAuteur()))
            .satisfies(a -> assertThat(a.getCiblePost()).as("check ciblePost").isEqualTo(expected.getCiblePost()));
    }
}
