package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CommercantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommercantAllPropertiesEquals(Commercant expected, Commercant actual) {
        assertCommercantAutoGeneratedPropertiesEquals(expected, actual);
        assertCommercantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommercantAllUpdatablePropertiesEquals(Commercant expected, Commercant actual) {
        assertCommercantUpdatableFieldsEquals(expected, actual);
        assertCommercantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommercantAutoGeneratedPropertiesEquals(Commercant expected, Commercant actual) {
        assertThat(actual)
            .as("Verify Commercant auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommercantUpdatableFieldsEquals(Commercant expected, Commercant actual) {
        assertThat(actual)
            .as("Verify Commercant relevant properties")
            .satisfies(a -> assertThat(a.getAdresseCommerce()).as("check adresseCommerce").isEqualTo(expected.getAdresseCommerce()))
            .satisfies(a -> assertThat(a.getMoyenPaiement()).as("check moyenPaiement").isEqualTo(expected.getMoyenPaiement()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCommercantUpdatableRelationshipsEquals(Commercant expected, Commercant actual) {
        assertThat(actual)
            .as("Verify Commercant relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
