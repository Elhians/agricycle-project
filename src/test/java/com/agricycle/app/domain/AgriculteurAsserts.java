package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgriculteurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgriculteurAllPropertiesEquals(Agriculteur expected, Agriculteur actual) {
        assertAgriculteurAutoGeneratedPropertiesEquals(expected, actual);
        assertAgriculteurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgriculteurAllUpdatablePropertiesEquals(Agriculteur expected, Agriculteur actual) {
        assertAgriculteurUpdatableFieldsEquals(expected, actual);
        assertAgriculteurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgriculteurAutoGeneratedPropertiesEquals(Agriculteur expected, Agriculteur actual) {
        assertThat(actual)
            .as("Verify Agriculteur auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgriculteurUpdatableFieldsEquals(Agriculteur expected, Agriculteur actual) {
        assertThat(actual)
            .as("Verify Agriculteur relevant properties")
            .satisfies(a -> assertThat(a.getTypeProduction()).as("check typeProduction").isEqualTo(expected.getTypeProduction()))
            .satisfies(a -> assertThat(a.getAnneeExperience()).as("check anneeExperience").isEqualTo(expected.getAnneeExperience()))
            .satisfies(a -> assertThat(a.getLocalisation()).as("check localisation").isEqualTo(expected.getLocalisation()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgriculteurUpdatableRelationshipsEquals(Agriculteur expected, Agriculteur actual) {
        assertThat(actual)
            .as("Verify Agriculteur relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
