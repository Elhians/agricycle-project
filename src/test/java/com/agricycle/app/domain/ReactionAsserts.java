package com.agricycle.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReactionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionAllPropertiesEquals(Reaction expected, Reaction actual) {
        assertReactionAutoGeneratedPropertiesEquals(expected, actual);
        assertReactionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionAllUpdatablePropertiesEquals(Reaction expected, Reaction actual) {
        assertReactionUpdatableFieldsEquals(expected, actual);
        assertReactionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionAutoGeneratedPropertiesEquals(Reaction expected, Reaction actual) {
        assertThat(actual)
            .as("Verify Reaction auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionUpdatableFieldsEquals(Reaction expected, Reaction actual) {
        assertThat(actual)
            .as("Verify Reaction relevant properties")
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getCible()).as("check cible").isEqualTo(expected.getCible()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReactionUpdatableRelationshipsEquals(Reaction expected, Reaction actual) {
        assertThat(actual)
            .as("Verify Reaction relationships")
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()))
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()));
    }
}
